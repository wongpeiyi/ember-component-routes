"use strict"
define("dummy/animations-page/attempt-a/component",["exports","dummy/mixins/cross-fade-attempt"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/animations-page/attempt-a/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"rq1AOyFj",block:'{"symbols":[],"statements":[[4,"link-to",["animations.cross-fade-attempt"],[["class","id","resetScroll"],["animation-box__frame","attempt_a",false]],{"statements":[[0,""]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/attempt-a/template.hbs"}})}),define("dummy/animations-page/attempt-b/component",["exports","dummy/mixins/cross-fade-attempt"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/animations-page/attempt-b/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"rkvWQqsE",block:'{"symbols":[],"statements":[[4,"link-to",["animations.index"],[["class","id","resetScroll"],["animation-box__frame animation-box__frame_back","attempt_b",false]],{"statements":[[0,""]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/attempt-b/template.hbs"}})}),define("dummy/animations-page/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/animations-page/cross-fade-a/component",["exports","dummy/mixins/basic-cross-fade"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/animations-page/cross-fade-a/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"jr0f/glW",block:'{"symbols":[],"statements":[[4,"link-to",["animations.basic-cross-fade"],[["class","id","resetScroll"],["animation-box__frame","cross-fade_a",false]],{"statements":[[0,""]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/cross-fade-a/template.hbs"}})}),define("dummy/animations-page/cross-fade-b/component",["exports","dummy/mixins/basic-cross-fade"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/animations-page/cross-fade-b/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"qXnGf9XO",block:'{"symbols":[],"statements":[[4,"link-to",["animations.index"],[["class","id","resetScroll"],["animation-box__frame animation-box__frame_back","cross-fade_b",false]],{"statements":[[0,""]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/cross-fade-b/template.hbs"}})}),define("dummy/animations-page/route-dependent-one/component",["exports","dummy/mixins/route-dependent"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default,{classNames:"animation-box__frame animation-box__frame_one",elementId:"route-dependent_one",name:"one"})}),define("dummy/animations-page/route-dependent-one/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"OupHlix7",block:'{"symbols":[],"statements":[[4,"link-to",["animations.index"],[["resetScroll"],[false]],{"statements":[[0,">"]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/route-dependent-one/template.hbs"}})}),define("dummy/animations-page/route-dependent-three/component",["exports","dummy/mixins/route-dependent"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default,{classNames:"animation-box__frame animation-box__frame_three",elementId:"route-dependent_three",name:"three"})}),define("dummy/animations-page/route-dependent-three/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"yEEFihJU",block:'{"symbols":[],"statements":[[4,"link-to",["animations.index"],[["resetScroll"],[false]],{"statements":[[0,"<"]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/route-dependent-three/template.hbs"}})}),define("dummy/animations-page/route-dependent-two/component",["exports","dummy/mixins/route-dependent"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default,{classNames:"animation-box__frame animation-box__frame_two",elementId:"route-dependent_two",name:"two"})}),define("dummy/animations-page/route-dependent-two/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"TAWWO61J",block:'{"symbols":[],"statements":[[4,"link-to",["animations.route-dependent-1"],[["resetScroll"],[false]],{"statements":[[0,"<"]],"parameters":[]},null],[0,"\\n"],[4,"link-to",["animations.route-dependent-3"],[["resetScroll"],[false]],{"statements":[[0,">"]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/route-dependent-two/template.hbs"}})}),define("dummy/animations-page/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"zu3Cv3ZI",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"Animations"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," gives you the ability to craft promise-aware animations on route transitions. The goal of this section is to demonstrate how this component-based approach can be simple, yet powerful and flexible.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  This section will walk you through crafting different animations on route transitions using "],[6,"a"],[10,"href","http://velocityjs.org"],[10,"target","_blank"],[8],[0,"VelocityJS"],[9],[0,". You can use any animation library, or even pure CSS transitions, though a promise-based animation library makes things more convenient.\\n"],[9],[0,"\\n\\n\\n"],[0,"\\n"],[6,"h2"],[10,"id","fade-to-white"],[8],[0,"Fade To White"],[9],[0,"\\n\\n"],[1,[26,"component-outlet",["white"],[["class","id"],["animation-box","outlet_fade-to-white"]]],false],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  To achieve this, we create a mixin used by both components rendered by the "],[6,"code"],[8],[0,"component-outlet"],[9],[0,". When the component is rendered, it should immediately fade in from opacity 0 to 1. Before the component is torn down, it should fade out to opacity 0:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["js","mixins/fade-to-white.js"]],{"statements":[[0,"import Mixin from \'@ember/object/mixin\';\\nimport { animate } from \'velocity-animate\';\\n\\nexport default Mixin.create({\\n\\n  didRenderComponent() {\\n    return animate(this.element, { opacity: [1, 0] });\\n  },\\n\\n  willTeardownComponent() {\\n    return animate(this.element, { opacity: 0 });\\n  }\\n\\n});\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  Since "],[6,"code"],[8],[0,"animate()"],[9],[0," returns a promise, the outgoing "],[6,"code"],[8],[0,"willTeardownComponent"],[9],[0," must resolve before the incoming component gets rendered — the fade out must finish before the next component can fade in.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  Similarly, "],[6,"code"],[8],[0,"didRenderComponent"],[9],[0," must resolve before "],[6,"code"],[8],[0,"willTeardownComponent"],[9],[0," can happen — the component must fully fade in before it can fade out.\\n"],[9],[0,"\\n\\n\\n"],[6,"h2"],[10,"id","cross-fade"],[8],[0,"Cross-Fade"],[9],[0,"\\n\\n"],[0,"\\n"],[6,"p"],[8],[0,"\\n  If we want the animations to happen simultaneously, we can first remove the "],[6,"code"],[8],[0,"return"],[9],[0,". Since no promise is returned, the incoming component will be rendered immediately as soon as the route transition occurs:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["js","mixins/cross-fade.js"]],{"statements":[[0,"import Mixin from \'@ember/object/mixin\';\\nimport { animate } from \'velocity-animate\';\\n\\nexport default Mixin.create({\\n\\n  didRenderComponent() {\\n    animate(this.element, { opacity: [1, 0] });\\n  },\\n\\n  willTeardownComponent() {\\n    animate(this.element, { opacity: 0 });\\n  }\\n\\n});\\n"]],"parameters":[]},null],[0,"\\n\\n"],[1,[26,"component-outlet",["attempt"],[["class","id"],["animation-box","outlet_attempt"]]],false],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  However, there is a problem with the fade out — without a returned promise, the outgoing component is torn down and destroyed instantly, before the fade out can happen.\\n"],[9],[0,"\\n\\n\\n"],[0,"\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"willTeardownComponent(toComponent, toRoute, teardown) {\\n  animate(this.element, { opacity: 0 })\\n    .then(teardown);\\n\\n  return false;\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  To ensure the component does not get destroyed until the fade out is complete, we return "],[6,"code"],[8],[0,"false"],[9],[0," in "],[6,"code"],[8],[0,"willTeardownComponent"],[9],[0,", which prevents the component teardown from happening automatically when the route transitions.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  We then chain the provided "],[6,"code"],[8],[0,"teardown"],[9],[0," function after the fade out animation, which manually resumes the component teardown process (i.e. "],[6,"code"],[8],[0,"willDestroyElement"],[9],[0,", etc) after the animation completes.\\n"],[9],[0,"\\n\\n"],[1,[26,"component-outlet",["cross-fade"],[["class","id"],["animation-box","cross-fade"]]],false],[0,"\\n\\n\\n"],[0,"\\n"],[6,"h2"],[10,"id","route-dependent"],[8],[0,"Route-Dependent Animations"],[9],[0,"\\n\\n"],[1,[26,"component-outlet",["route-dependent"],[["class","id"],["animation-box","route-dependent"]]],false],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  In this example, the middle component (2) should —\\n"],[9],[0,"\\n\\n"],[6,"ul"],[8],[0,"\\n  "],[6,"li"],[8],[0,"\\n    if transiting from 1 — slide in from right\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    if transiting from 3 — slide in from left\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    if transiting to 1 — slide out to right\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    if transiting to 3 — slide out to left\\n  "],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  We can utilise the arguments provided in the component hooks to customise the animation direction. When rendered, we use the provided "],[6,"code"],[8],[0,"fromComponent"],[9],[0," to determine if the outgoing component is 1 or 3:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"didRenderComponent(fromComponent) {\\n  // If left of the outgoing component, slide in from left (-100%)\\n  const start = this._isBefore(fromComponent) ? \'-100%\' : \'100%\';\\n\\n  animate(this.element, { translateX: [0, start] });\\n},\\n\\n_isBefore(componentName) {\\n  // True if this component is left of the specified component\\n  return this.toString().match(\'-two\') && componentName.match(\'-three\') ||\\n         this.toString().match(\'-one\') && componentName.match(\'-two\');\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  When tearing down, we use "],[6,"code"],[8],[0,"toComponent"],[9],[0," to determine if the incoming component is 1 or 3:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"willTeardownComponent(toComponent, toRoute, teardown) {\\n  // If left of the incoming component, slide out to left (-100%)\\n  const end = this._isBefore(toComponent) ? \'-100%\' : \'100%\';\\n\\n  animate(this.element, { translateX: end })\\n    .then(teardown);\\n\\n  return false;\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  We also make sure to return "],[6,"code"],[8],[0,"false"],[9],[0," and manually tear down the component only after the teardown animation completes.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  Finally, we can check for the presence of "],[6,"code"],[8],[0,"fromComponent"],[9],[0," on the initial route transition, to prevent an animation on first page load. We do the same for "],[6,"code"],[8],[0,"toComponent"],[9],[0," to handle the transition where the entire "],[6,"code"],[8],[0,"component-outlet"],[9],[0," is tearing down:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"didRenderComponent(fromComponent) {\\n  // No animation on first page load\\n  if (!fromComponent) {\\n    return;\\n  }\\n  // ...\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"willTeardownComponent(toComponent, toRoute, teardown) {\\n  // No animation if tearing down component-outlet\\n  if (!toComponent) {\\n    return;\\n  }\\n  // ...\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  Here is the entire code for the "],[6,"code"],[8],[0,"route-dependent"],[9],[0," mixin:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["js","route-dependent.js"]],{"statements":[[0,"import Mixin from \'@ember/object/mixin\';\\nimport { animate } from \'velocity-animate\';\\n\\nexport default Mixin.create({\\n\\n  didRenderComponent(fromComponent) {\\n    // No animation on first page load\\n    if (!fromComponent) {\\n      return;\\n    }\\n\\n    // If left of the outgoing component, slide in from left (-100%)\\n    const start = this._isBefore(fromComponent) ? \'-100%\' : \'100%\';\\n\\n    animate(this.element, { translateX: [0, start] });\\n  },\\n\\n  willTeardownComponent(toComponent, toRoute, teardown) {\\n    // No animation if tearing down component-outlet\\n    if (!toComponent) {\\n      return;\\n    }\\n\\n    // If left of the incoming component, slide out to left (-100%)\\n    const end = this._isBefore(toComponent) ? \'-100%\' : \'100%\';\\n\\n    animate(this.element, { translateX: end })\\n      .then(teardown);\\n\\n    return false;\\n  },\\n\\n  _isBefore(componentName) {\\n    // True if this component is left of the specified component\\n    return this.toString().match(\'-two\') && componentName.match(\'-three\') ||\\n           this.toString().match(\'-one\') && componentName.match(\'-two\');\\n  }\\n\\n});\\n"]],"parameters":[]},null],[0,"\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["component-hooks"],null,{"statements":[[0,"Usage: Component Hooks"]],"parameters":[]},null],[0,"\\n  "],[4,"link-to",["vs-classic"],null,{"statements":[[0,"Comparison with Classic Ember"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/template.hbs"}})}),define("dummy/animations-page/white-a/component",["exports","dummy/mixins/fade-to-white"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/animations-page/white-a/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"KBxF43Nm",block:'{"symbols":[],"statements":[[4,"link-to",["animations.fade-to-white"],[["class","id","resetScroll"],["animation-box__frame","fade-to-white_a",false]],{"statements":[[0,""]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/white-a/template.hbs"}})}),define("dummy/animations-page/white-b/component",["exports","dummy/mixins/fade-to-white"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/animations-page/white-b/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"SXE2N+5i",block:'{"symbols":[],"statements":[[4,"link-to",["animations.index"],[["class","id","resetScroll"],["animation-box__frame animation-box__frame_back","fade-to-white_b",false]],{"statements":[[0,""]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/animations-page/white-b/template.hbs"}})}),define("dummy/animations/basic-cross-fade/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("animations-page.cross-fade-b",{into:"animations-page",outlet:"cross-fade"})}})}),define("dummy/animations/cross-fade-attempt/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("animations-page.attempt-b",{into:"animations-page",outlet:"attempt"})}})}),define("dummy/animations/fade-to-white/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("animations-page.white-b",{into:"animations-page",outlet:"white"})}})}),define("dummy/animations/route-dependent-1/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("animations-page.route-dependent-one",{into:"animations-page",outlet:"route-dependent"})}})}),define("dummy/animations/route-dependent-3/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("animations-page.route-dependent-three",{into:"animations-page",outlet:"route-dependent"})}})}),define("dummy/animations/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("animations-page"),this.renderComponent("animations-page/white-a",{into:"animations-page",outlet:"white"}),this.renderComponent("animations-page/attempt-a",{into:"animations-page",outlet:"attempt"}),this.renderComponent("animations-page/cross-fade-a",{into:"animations-page",outlet:"cross-fade"}),this.renderComponent("animations-page/route-dependent-two",{into:"animations-page",outlet:"route-dependent"})}})}),define("dummy/api-component-route/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/api-component-route/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend()}),define("dummy/api-component-route/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"bPdSvqae",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"ComponentRoute"],[9],[0,"\\n\\n"],[4,"code-block",null,[["numbers"],[false]],{"statements":[[0,"import { ComponentRoute, ComponentRouteMixin } from \'ember-component-routes\'\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," exports the "],[6,"code"],[8],[0,"ComponentRouteMixin"],[9],[0,", as well as "],[6,"code"],[8],[0,"ComponentRoute"],[9],[0," (an Ember "],[6,"code"],[8],[0,"Route"],[9],[0," that extends the mixin) for convenience.\\n"],[9],[0,"\\n\\n"],[0,"\\n"],[6,"h2"],[10,"id","attributes"],[8],[0,"\\n  attributes\\n  "],[6,"span"],[10,"class","args"],[8],[0,"(model, params, actions)"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"ul"],[10,"class","args-definition"],[8],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"model"],[9],[0,"\\n    "],[6,"em"],[8],[0,"Object"],[9],[0,"\\n    Return value of the "],[6,"code"],[8],[0,"model"],[9],[0," hook\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"params"],[9],[0,"\\n    "],[6,"em"],[8],[0,"Object"],[9],[0,"\\n    Positional and query parameters; value of "],[6,"code"],[8],[0,"this.paramsFor(this.routeName)"],[9],[0,"\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"actions"],[9],[0,"\\n    "],[6,"em"],[8],[0,"Object"],[9],[0,"\\n    Actions defined on this route, as a POJO of closure actions\\n  "],[9],[0,"\\n  "],[6,"li"],[10,"class","args-definition__returns"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"Returns"],[9],[0,"\\n    "],[6,"em"],[8],[0,"Object"],[9],[0,"\\n    POJO of attributes to be set on the rendered component\\n  "],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The "],[6,"code"],[8],[0,"attributes"],[9],[0," hook receives the result of the "],[6,"code"],[8],[0,"model"],[9],[0," hook, the route\'s positional and query parameters, and the route\'s actions as closures. It then calls the "],[6,"code"],[8],[0,"renderComponents"],[9],[0," hook, and sets the return value of the "],[6,"code"],[8],[0,"attributes"],[9],[0," hook on all components rendered by this route.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The hook is called after the "],[6,"code"],[8],[0,"model"],[9],[0," hooks resolve. Any query param or positional param change will refresh this flow, calling the hook again and passing the new attributes to rendered components.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  If not overridden, the hook defaults to:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["numbers","type"],[false,"js"]],{"statements":[[0,"attributes(model, params, actions) {\\n  return { model, params, actions };\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[0,"\\n"],[6,"h2"],[10,"id","currentAttributes"],[8],[0,"currentAttributes"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The most recent result of the "],[6,"code"],[8],[0,"attributes"],[9],[0," hook can be accessed via the "],[6,"code"],[8],[0,"currentAttributes"],[9],[0," property on the route.\\n"],[9],[0,"\\n\\n"],[0,"\\n"],[6,"h2"],[10,"id","queryParams"],[8],[0,"\\n  queryParams\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The classic Ember "],[6,"a"],[10,"href","https://emberjs.com/api/ember/release/classes/Route/properties/queryParams?anchor=queryParams"],[10,"target","_blank"],[8],[0,"query params configuration options"],[9],[0,", with slight modifications — only "],[6,"code"],[8],[0,"as"],[9],[0," and "],[6,"code"],[8],[0,"refreshModel"],[9],[0," are preserved, while "],[6,"code"],[8],[0,"defaultValue"],[9],[0," is newly added:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"queryParams: {\\n  // Property key in the `params` hash argument in the `attributes` hook,\\n  // or in the result of `paramsFor`\\n  page: {\\n\\n    // (Same as classic Ember) URL key\\n    as: \'page\',\\n\\n    // (Same as classic Ember) Re-triggers model hooks on change if true\\n    refreshModel: false,\\n\\n    // Sets the default value of the query param. This will be the property\'s\\n    // value if the query param is not included in the URL query string\\n    defaultValue: undefined\\n\\n  }\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[0,"\\n"],[6,"h2"],[10,"id","refreshAttributes"],[8],[0,"\\n  refreshAttributes\\n  "],[6,"span"],[10,"class","args"],[8],[0,"()"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  If necessary, you can call "],[6,"code"],[8],[0,"refreshAttributes()"],[9],[0," from the route to re-trigger the "],[6,"code"],[8],[0,"attributes"],[9],[0," hook, which will in turn call the "],[6,"code"],[8],[0,"renderComponents"],[9],[0," hook.\\n"],[9],[0,"\\n\\n"],[0,"\\n"],[6,"h2"],[10,"id","renderComponents"],[8],[0,"\\n  renderComponents\\n  "],[6,"span"],[10,"class","args"],[8],[0,"()"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The "],[6,"code"],[8],[0,"renderComponents"],[9],[0," hook is analogous to the classic\\n  "],[6,"code"],[8],[6,"a"],[10,"href","https://emberjs.com/api/ember/release/classes/Route/methods/renderTemplate?anchor=renderTemplate"],[10,"target","_blank"],[8],[0,"renderTemplate"],[9],[9],[0,"\\n  hook. It allows you to define one or more "],[6,"code"],[8],[0,"renderComponent"],[9],[0," calls when the route is entered, or when attributes change.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  If not overridden, the hook defaults to:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["numbers"],[false]],{"statements":[[0,"renderComponents() {\\n  this.renderComponent(this.routeName);\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  Note: as Ember only recognizes components names with hyphens, a "],[6,"code"],[8],[0,"\'post\'"],[9],[0," route, for example, will not be able to render a component by default. However, an "],[6,"code"],[8],[0,"\'all-posts\'"],[9],[0," route or a "],[6,"code"],[8],[0,"\'post/comment\'"],[9],[0," route will be able to.\\n"],[9],[0,"\\n\\n"],[0,"\\n"],[6,"h2"],[10,"id","renderComponent"],[8],[0,"\\n  renderComponent\\n  "],[6,"span"],[10,"class","args"],[8],[0,"(componentName, opts)"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"ul"],[10,"class","args-definition"],[8],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"componentName"],[9],[0,"\\n    "],[6,"em"],[8],[0,"String"],[9],[0,"\\n    Name of component to render\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"opts"],[9],[0,"\\n    "],[6,"em"],[8],[0,"Object"],[9],[0,"\\n    Options\\n    "],[6,"ul"],[8],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[6,"code"],[8],[0,"into"],[9],[0," "],[6,"em"],[8],[0,"String"],[9],[0," Name of template or component containing the\\n        "],[6,"code"],[8],[0,"component-outlet"],[9],[0," to render into. Defaults to this route\'s parent\\n        template\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[6,"code"],[8],[0,"outlet"],[9],[0," "],[6,"em"],[8],[0,"String"],[9],[0," Name of the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," to render into. Defaults to "],[6,"code"],[8],[0,"\'main\'"],[9],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The "],[6,"code"],[8],[0,"renderComponent"],[9],[0," method is analogous to the classic\\n  "],[6,"code"],[8],[6,"a"],[10,"href","https://emberjs.com/api/ember/release/classes/Route/methods/render?anchor=render"],[10,"target","_blank"],[8],[0,"render"],[9],[9],[0,"\\n  method, except that it renders a component by name. The method accepts similar arguments and behaves in the same way:\\n"],[9],[0,"\\n\\n\\n"],[4,"code-block",null,[["numbers"],[false]],{"statements":[[0,"this.renderComponent(\'post-page\', { into: \'application\', outlet: \'main\' });\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  The above default options will render the "],[6,"code"],[8],[0,"post-page"],[9],[0," component into the application template containing the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," named "],[6,"code"],[8],[0,"\'main\'"],[9],[0," (which is the default name).\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  For example, if you have two "],[6,"code"],[8],[0,"component-outlets"],[9],[0," in a single template, you can target one by doing:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["htmlbars","index-page/template.hbs"]],{"statements":[[0,"{{component-outlet}}\\n\\n{{component-outlet \'sidebar\'}}\\n"]],"parameters":[]},null],[0,"\\n\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"this.renderComponent(\'post-page\', {\\n  into: \'parent-page\',\\n  outlet: \'sidebar\'\\n});\\n"]],"parameters":[]},null],[0,"\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["api-component"],null,{"statements":[[0,"Component"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/api-component-route/template.hbs"}})}),define("dummy/api-component/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)})
define("dummy/api-component/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend()}),define("dummy/api-component/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"IzUvQjpm",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"Component"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  While "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," doesn\'t export an actual "],[6,"code"],[8],[0,"Component"],[9],[0," class, components rendered by a "],[6,"code"],[8],[0,"{{component-outlet}}"],[9],[0," have two hooks injected into them:\\n"],[9],[0,"\\n\\n"],[0,"\\n"],[6,"h2"],[10,"id","didRenderComponent"],[8],[0,"\\n  didRenderComponent\\n  "],[6,"span"],[10,"class","args"],[8],[0,"(fromComponent, fromRoute)"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"ul"],[10,"class","args-definition"],[8],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"fromComponent"],[9],[0,"\\n    "],[6,"em"],[8],[0,"String"],[9],[0,"\\n    "],[6,"br"],[8],[9],[0,"\\n    Name of previous component rendered in the "],[6,"code"],[8],[0,"component-outlet"],[9],[0,".\\n    "],[6,"br"],[8],[9],[0,"\\n    Is "],[6,"code"],[8],[0,"undefined"],[9],[0," on initial transition (first page load)\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"fromRoute"],[9],[0,"\\n    "],[6,"em"],[8],[0,"String"],[9],[0,"\\n    "],[6,"br"],[8],[9],[0,"\\n    Name of route transitioned from.\\n    "],[6,"br"],[8],[9],[0,"\\n    Is "],[6,"code"],[8],[0,"undefined"],[9],[0," on initial transition (first page load)\\n  "],[9],[0,"\\n  "],[6,"li"],[10,"class","args-definition__returns"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"Returns"],[9],[0,"\\n    "],[6,"em"],[8],[0,"Any | Promise<any>"],[9],[0,"\\n    "],[6,"br"],[8],[9],[0,"\\n    If a promise is returned, the promise must be resolved before the component can be torn down\\n  "],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  This hook is called after the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," inserts and renders that component. This is where you would typically define \\"in\\" animations, e.g. \\"fade in\\" or slide in\\".\\n"],[9],[0,"\\n"],[6,"p"],[8],[0,"\\n  If a promise is returned, subsequent route transitions will wait for the promise to be resolved before the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," can tear down the component (i.e. "],[6,"code"],[8],[0,"willTeardownComponent"],[9],[0,").\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  While awaiting the promise to be resolved, any subsequent route transitions will happen normally (i.e. the URL will change), but the corresponding renders and teardowns by the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," will be enqueued.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  You can use the "],[6,"code"],[8],[0,"fromComponent"],[9],[0," and "],[6,"code"],[8],[0,"fromRoute"],[9],[0," arguments to customize different behaviour depending on the previous rendered component or route. These will be "],[6,"code"],[8],[0,"undefined"],[9],[0," on the initial transition (first page load).\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  For example:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"didRenderComponent(fromComponent) {\\n  // No animation on page load\\n  if (!fromComponent) {\\n    return;\\n  }\\n\\n  // Promise returned – fade in must finish before component can tear down\\n  return animate(this.element, { opacity: [1, 0] });\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[0,"\\n"],[6,"h2"],[10,"id","didUpdateRouteAttrs"],[8],[0,"\\n  didUpdateRouteAttrs\\n  "],[6,"span"],[10,"class","args"],[8],[0,"()"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  This hook is called after the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," updates an already rendered component\'s attributes. It isn\'t called on the first render, meaning "],[6,"code"],[8],[0,"didRenderComponent"],[9],[0," and "],[6,"code"],[8],[0,"didUpdateRouteAttrs"],[9],[0," will never be called together.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  This hook can be used to trigger certain behaviour when a route\'s attributes are updated but the rendered component remains the same, e.g. a change in query params only, or in "],[4,"link-to",["attributes",[26,"query-params",null,[["anchor"],["application-level"]]]],null,{"statements":[[0,"application-level attributes"]],"parameters":[]},null],[0,".\\n"],[9],[0,"\\n\\n"],[0,"\\n"],[6,"h2"],[10,"id","willTeardownComponent"],[8],[0,"\\n  willTeardownComponent\\n  "],[6,"span"],[10,"class","args"],[8],[0,"(toComponent, toRoute, teardown)"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"ul"],[10,"class","args-definition"],[8],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"toComponent"],[9],[0,"\\n    "],[6,"em"],[8],[0,"String"],[9],[0,"\\n    "],[6,"br"],[8],[9],[0,"\\n    Name of next component to be rendered in the "],[6,"code"],[8],[0,"component-outlet"],[9],[0,".\\n    "],[6,"br"],[8],[9],[0,"\\n    Is "],[6,"code"],[8],[0,"undefined"],[9],[0," on tearing down "],[6,"code"],[8],[0,"component-outlet"],[9],[0,"\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"toRoute"],[9],[0,"\\n    "],[6,"em"],[8],[0,"String"],[9],[0,"\\n    "],[6,"br"],[8],[9],[0,"\\n    Name of route to be transitioned to.\\n    "],[6,"br"],[8],[9],[0,"\\n    Is "],[6,"code"],[8],[0,"undefined"],[9],[0," on tearing down "],[6,"code"],[8],[0,"component-outlet"],[9],[0,"\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"teardown"],[9],[0,"\\n    "],[6,"em"],[8],[0,"Function"],[9],[0,"\\n    "],[6,"br"],[8],[9],[0,"\\n    Method to manually destroy the component if "],[6,"code"],[8],[0,"false"],[9],[0," is returned\\n  "],[9],[0,"\\n  "],[6,"li"],[10,"class","args-definition__returns"],[8],[0,"\\n    "],[6,"strong"],[8],[0,"Returns"],[9],[0,"\\n    "],[6,"em"],[8],[0,"Any | Promise<any>"],[9],[0,"\\n    "],[6,"br"],[8],[9],[0,"\\n    If a promise is returned, it must be resolved before the component gets destroyed, and before the next component can render.\\n    "],[6,"br"],[8],[9],[0,"\\n    If "],[6,"code"],[8],[0,"false"],[9],[0," is returned, the component will not be destroyed until the "],[6,"code"],[8],[0,"teardown"],[9],[0," function is called\\n  "],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  This hook is called before the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," can render a new component. This is where you would typically define \\"out\\" animations, e.g. \\"fade out\\" or slide out\\".\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  By default, the component will be torn down and destroyed (i.e. "],[6,"code"],[8],[0,"willDestroyElement"],[9],[0,", etc) after this hook resolves.\\n"],[9],[0,"\\n\\n"],[6,"h3"],[8],[0,"Return value is a Promise"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  If a promise is returned, the component will only be destroyed after the promise is resolved. The "],[6,"code"],[8],[0,"component-outlet"],[9],[0," will also wait until the promise is resolved before rendering the next component.\\n\\n"],[6,"p"],[8],[0,"\\n  While awaiting the promise to be resolved, any subsequent route transitions will happen normally (i.e. the URL will change), but the corresponding renders and teardowns by the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," will be enqueued.\\n"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  For example:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"willTeardownComponent() {\\n  // Promise returned – fade out must finish before component gets destroyed\\n  // and next component can render\\n  return animate(this.element, { opacity: 0 });\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[6,"h3"],[8],[0,"Return value is not a Promise"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  If the return value is not a promise, the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," will render the next component immediately. The component will also be destroyed immediately.\\n"],[9],[0,"\\n\\n"],[6,"h3"],[8],[0,"Return value is "],[6,"code"],[8],[0,"false"],[9],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  In some cases you want to render the next component immediately, without destroying the component until later. This can be done by returning "],[6,"code"],[8],[0,"false"],[9],[0,", and manually calling the provided "],[6,"code"],[8],[0,"teardown()"],[9],[0," function to destroy the component:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"willTeardownComponent(toComponent, toRoute, teardown) {\\n  animate(this.element, { opacity: 0 })\\n    .then(teardown); // Component will destroy after fade out\\n\\n  // Not a promise – next component will render immediately\\n  // False returned – component will not be destroyed immediately\\n  return false;\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  You can use the "],[6,"code"],[8],[0,"toComponent"],[9],[0," and "],[6,"code"],[8],[0,"toRoute"],[9],[0," arguments to customize different behaviour depending on the next component that will be rendered, or the route that will be transitioned into. These will be undefined if the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," is tearing down (i.e. parent route is deactivating).\\n"],[9],[0,"\\n\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["api-component-route"],[["class"],["back"]],{"statements":[[0,"ComponentRoute"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/api-component/template.hbs"}})}),define("dummy/app",["exports","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,n,t,o){Object.defineProperty(e,"__esModule",{value:!0})
var a=Ember.Application.extend({modulePrefix:o.default.modulePrefix,podModulePrefix:o.default.podModulePrefix,Resolver:n.default});(0,t.default)(a,o.default.modulePrefix),e.default=a}),define("dummy/application/controller",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({testing:Ember.computed.match("currentRouteName",/^test/)})}),define("dummy/application/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({queryParams:{anchor:{}},attributes:function(e,n){return{anchor:n.anchor}}})}),define("dummy/application/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"sv2U8JZV",block:'{"symbols":[],"statements":[[4,"if",[[22,["testing"]]],null,{"statements":[[0,"\\n  "],[1,[20,"outlet"],false],[0,"\\n\\n"]],"parameters":[]},{"statements":[[0,"\\n  "],[1,[20,"top-bar"],false],[0,"\\n\\n  "],[6,"div"],[10,"class","container"],[8],[0,"\\n    "],[1,[20,"side-menu"],false],[0,"\\n\\n    "],[1,[26,"component-outlet",null,[["class"],["main"]]],false],[0,"\\n  "],[9],[0,"\\n\\n"]],"parameters":[]}]],"hasEval":false}',meta:{moduleName:"dummy/application/template.hbs"}})}),define("dummy/attributes-page/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/attributes-page/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"yqhqytuq",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"Passing Attributes & Actions"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The classic Ember route lifecycle looks something like this:\\n"],[9],[0,"\\n\\n"],[6,"img"],[11,"src",[26,"root-url",["/img/classic-ember-routing-2e375df9673685a6499d89aaff2834b8.png"],null],null],[10,"class","attributes__classic"],[8],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," greatly simplifies the flow by removing the controller and template:\\n"],[9],[0,"\\n\\n"],[6,"img"],[11,"src",[26,"root-url",["/img/ember-component-routes-routing-4f066be686a9c613ed2ec93f0264faf4.png"],null],null],[10,"class","attributes__component"],[8],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The result of the "],[6,"code"],[8],[0,"model"],[9],[0," hook is now passed to an intermediary "],[6,"code"],[8],[0,"attributes"],[9],[0," hook, the result of which is in turn passed to all components rendered by the "],[6,"code"],[8],[0,"renderComponents"],[9],[0," hook.\\n"],[9],[0,"\\n\\n"],[6,"h2"],[8],[0,"Attributes Hook"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The "],[6,"code"],[8],[0,"attributes"],[9],[0," hook receives as arguments:\\n"],[9],[0,"\\n\\n"],[6,"ol"],[8],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"code"],[8],[0,"model"],[9],[0," — the result of the "],[6,"code"],[8],[0,"model"],[9],[0," hook\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"code"],[8],[0,"params"],[9],[0," — a hash of the route\'s positional and query params\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"code"],[8],[0,"actions"],[9],[0," — a hash of the route\'s custom-defined actions as closures\\n  "],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  This allows you to define the exact attributes and actions that are passed to the rendered components.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  For example:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["js","post/route.js"]],{"statements":[[0,"import { ComponentRoute } from \'ember-component-routes\';\\n\\nexport default ComponentRoute.extend({\\n\\n  model({ id }) {\\n    return this.store.findRecord(\'post\', id);\\n  },\\n\\n  attributes(model, params, actions) {\\n    return { model, params, actions };\\n  },\\n\\n  renderComponents() {\\n    this.renderComponent(\'post-page\');\\n  },\\n\\n  actions: {\\n    reload() {\\n      this.refresh();\\n    }\\n  }\\n});\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  When the "],[6,"code"],[8],[0,"post-page"],[9],[0,"component renders, it will have access to these attributes via "],[6,"code"],[8],[0,"@route"],[9],[0,":\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["hbs","post-page/template.hbs"]],{"statements":[[0,"<h1>{{@route.model.title}} – #{{@route.params.id}}</h1>\\n\\n<button onclick={{@route.actions.reload}}>Reload</button>\\n"]],"parameters":[]},null],[0,"\\n"],[6,"h2"],[10,"id","application-level"],[8],[0,"Application-Level Attributes"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  A special case exists when you extend your "],[6,"code"],[8],[0,"application/route"],[9],[0," as a "],[6,"code"],[8],[0,"ComponentRoute"],[9],[0,":\\n"],[9],[0,"\\n\\n"],[6,"ul"],[8],[0,"\\n  "],[6,"li"],[8],[6,"code"],[8],[0,"renderComponents"],[9],[0," will not render any components"],[9],[0,"\\n  "],[6,"li"],[8],[6,"code"],[8],[0,"renderTemplate"],[9],[0," will render the "],[6,"code"],[8],[0,"application"],[9],[0," template as per classic Ember"],[9],[0,"\\n  "],[6,"li"],[8],[6,"code"],[8],[0,"attributes"],[9],[0," will be merged into the result of "],[6,"em"],[8],[0,"all"],[9],[0," other routes\' "],[6,"code"],[8],[0,"attributes"],[9],[0," hooks"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  For example, query params defined on your "],[6,"code"],[8],[0,"application"],[9],[0," route can serve as global attributes accessible by any rendered component.\\n"],[9],[0,"\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["rendering"],null,{"statements":[[0,"Rendering Components"]],"parameters":[]},null],[0,"\\n  "],[4,"link-to",["query-params"],null,{"statements":[[0,"Query Params"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/attributes-page/template.hbs"}})}),define("dummy/attributes/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("attributes-page")}})}),define("dummy/code-block/component",["exports","highlight.js/lib/highlight","highlight.js/lib/languages/javascript","highlight.js/lib/languages/handlebars","highlight.js/lib/languages/htmlbars"],function(e,n,t,o,a){Object.defineProperty(e,"__esModule",{value:!0}),n.default.registerLanguage("js",t.default),n.default.registerLanguage("hbs",o.default),n.default.registerLanguage("htmlbars",a.default),e.default=Ember.Component.extend({classNames:"code-block",classNameBindings:"numbers::code-block_no-line-numbers",numbers:!0,didInsertElement:function(){this._super.apply(this,arguments),this.numbers&&this.addLineNumbers(),this.highlight()},highlight:function(){this.element.querySelectorAll("code").forEach(function(e){return n.default.highlightBlock(e)})},addLineNumbers:function(){var e=this.element.querySelectorAll(".code-block__code pre code"),n=void 0
e.forEach(function(e){return n+=e.innerHTML})
var t=n.match(/\n/g).length,o=Array.apply(null,Array(t)).map(function(e,n){return n+1})
this.element.querySelector(".code-block__numbers pre").innerHTML=o.join("\n")}})}),define("dummy/code-block/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"VQkJfHi6",block:'{"symbols":["@type","&default","@title","@custom"],"statements":[[4,"if",[[21,3,[]]],null,{"statements":[[0,"  "],[6,"div"],[10,"class","code-block__title"],[8],[6,"pre"],[8],[1,[21,3,[]],false],[9],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[6,"div"],[10,"class","code-block__numbers"],[8],[6,"pre"],[8],[9],[9],[0,"\\n\\n"],[6,"div"],[10,"class","code-block__code"],[8],[0,"\\n"],[4,"if",[[21,4,[]]],null,{"statements":[[0,"    "],[6,"pre"],[8],[13,2],[9],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"pre"],[8],[6,"code"],[11,"class",[27,[[21,1,[]]]]],[8],[13,2],[9],[9],[0,"\\n"]],"parameters":[]}],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/code-block/template.hbs"}})}),define("dummy/component-hooks-page/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/component-hooks-page/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"SAkXLQdN",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"Component Hooks"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," injects three hooks to components rendered by a "],[6,"code"],[8],[0,"component-outlet"],[9],[0,":\\n"],[9],[0,"\\n\\n"],[6,"ul"],[8],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"code"],[8],[0,"didRenderComponent"],[9],[0," — after a component\'s "],[6,"code"],[8],[0,"didRender"],[9],[0,"\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"code"],[8],[0,"didUpdateRouteAttrs"],[9],[0," — after a component\'s "],[6,"code"],[8],[0,"@route"],[9],[0," attributes are updated subsequently\\n  "],[9],[0,"\\n  "],[6,"li"],[8],[0,"\\n    "],[6,"code"],[8],[0,"willTeardownComponent"],[9],[0," — before a component\'s "],[6,"code"],[8],[0,"willDestroyElement"],[9],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  "],[6,"code"],[8],[0,"didRenderComponent"],[9],[0," and "],[6,"code"],[8],[0,"willTeardownComponent"],[9],[0," are async functions, meaning they can optionally return a promise that will pause and enqueue subsequent renders and teardowns by the "],[6,"code"],[8],[0,"component-outlet"],[9],[0," until the promise is resolved.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  This effectively allows you to craft \\"blocking\\" animations on route transitions. See the "],[4,"link-to",["animations"],null,{"statements":[[0,"Animations"]],"parameters":[]},null],[0," section for examples, and the "],[4,"link-to",["api-component"],null,{"statements":[[0,"API Reference"]],"parameters":[]},null],[0," for details.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  "],[6,"code"],[8],[0,"didUpdateRouteAttrs"],[9],[0," allows you to trigger behaviour when the route\'s attributes change but the rendered component remains the same, e.g. a change in query params only.\\n"],[9],[0,"\\n\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["query-params"],null,{"statements":[[0,"Query Params"]],"parameters":[]},null],[0,"\\n  "],[4,"link-to",["animations"],null,{"statements":[[0,"Examples: Animations"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/component-hooks-page/template.hbs"}})}),define("dummy/component-hooks/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("component-hooks-page")}})}),define("dummy/components/component-outlet",["exports","ember-component-routes/components/component-outlet"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return n.default}})}),define("dummy/helpers/root-url",["exports","ember-root-url/helpers/root-url"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(e,"rootUrl",{enumerable:!0,get:function(){return n.rootUrl}})}),define("dummy/index-page/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/index-page/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"ndNqXCvr",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"Overview"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," is an experimental Ember CLI addon that enables routes to render components directly into a "],[6,"code"],[8],[0,"{{component-outlet}}"],[9],[0,", aiming to:\\n"],[9],[0,"\\n\\n"],[6,"ol"],[8],[0,"\\n  "],[6,"li"],[8],[0,"Eliminate the need for controllers / top-level templates"],[9],[0,"\\n  "],[6,"li"],[8],[0,"Simplify query params and route actions"],[9],[0,"\\n  "],[6,"li"],[8],[0,"Enable component animations on route transitions"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"... all while preserving classic routing functionality, so you don\'t have to rewrite your existing apps."],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  This addon was originally based on the "],[6,"a"],[10,"href","https://github.com/ef4/rfcs/blob/routeable-components/active/0000-routeable-components.md"],[10,"target","_blank"],[8],[0,"Routable Components RFC"],[9],[0,", but rewritten upon its closure to follow the new "],[6,"a"],[10,"href","https://github.com/emberjs/rfcs/pull/38#issuecomment-355800759"],[10,"target","_blank"],[8],[0,"streamlined direction"],[9],[0,".\\n"],[9],[0,"\\n\\n"],[6,"hr"],[8],[9],[0,"\\n\\n"],[6,"h1"],[8],[0,"Installation"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  In your Ember project folder, run:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["numbers"],[false]],{"statements":[[0,"ember install ember-component-routes\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," is tested to work with Ember 2.4 and above.\\n"],[9],[0,"\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["rendering"],null,{"statements":[[0,"Rendering components"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/index-page/template.hbs"}})}),define("dummy/index/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("index-page")}})}),define("dummy/initializers/allow-link-action",["exports","ember-link-action/initializers/allow-link-action"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return n.initialize}})}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",n.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/ember-routable-components-today",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=t
var n=void 0
function t(){n||(n=!0,Ember.Route.reopen({paramsFor:function(e){var n=this._super(e),t=Ember.getOwner(this).lookup("route:"+e)
return t&&t._queryParamsDiff?Ember.assign(n,t._queryParamsDiff):n}}))}e.default={name:"ember-component-routes",initialize:t}}),define("dummy/initializers/export-application-global",["exports","dummy/config/environment"],function(e,n){function t(){var e=arguments[1]||arguments[0]
if(!1!==n.default.exportApplicationGlobal){var t
if("undefined"!=typeof window)t=window
else if("undefined"!=typeof global)t=global
else{if("undefined"==typeof self)return
t=self}var o,a=n.default.exportApplicationGlobal
o="string"==typeof a?a:Ember.String.classify(n.default.modulePrefix),t[o]||(t[o]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete t[o]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=t,e.default={name:"export-application-global",initialize:t}}),define("dummy/initializers/link-action-reset-scroll",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=t
var n={router:Ember.inject.service(),init:function(){this._super.apply(this,arguments),!1!==this.resetScroll&&this.on(this.eventName,this,"queueResetPosition")},willDestroyElement:function(){this._super.apply(this,arguments),this.off(this.eventName,this,"queueResetPosition")},queueResetPosition:function(){var e=this,n=this.router._router
n.one("didTransition",function(){var t=n.currentRouteName.replace(/\.index$/,"")
e.targetRouteName===t&&window.scrollTo(0,0)})}}
function t(){Ember.LinkComponent.reopen(n)}e.default={initialize:t,after:"allow-link-action"}}),define("dummy/mixins/basic-cross-fade",["exports","velocity-animate"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({didRenderComponent:function(){(0,n.animate)(this.element,{opacity:[1,0]})},willTeardownComponent:function(e,t,o){return(0,n.animate)(this.element,{opacity:0}).then(o),!1}})}),define("dummy/mixins/cross-fade-attempt",["exports","velocity-animate"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({didRenderComponent:function(){(0,n.animate)(this.element,{opacity:[1,0]})},willTeardownComponent:function(){(0,n.animate)(this.element,{opacity:0})}})}),define("dummy/mixins/fade-to-white",["exports","velocity-animate"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({didRenderComponent:function(){return(0,n.animate)(this.element,{opacity:[1,0]})},willTeardownComponent:function(){return(0,n.animate)(this.element,{opacity:0})}})}),define("dummy/mixins/link-action",["exports","ember-link-action/mixins/link-action"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return n.default}})}),define("dummy/mixins/page",["exports","velocity-animate"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({classNames:"page",didRenderComponent:function(){var e,t=(e=regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(t){e.next=3
break}return this._scrollToAnchor(),e.abrupt("return")
case 3:return e.next=5,(0,n.animate)(this.element,{opacity:[1,.33],translateX:[0,"-33%"]},{duration:300,easing:"ease-out-circ"})
case 5:this._scrollToAnchor()
case 6:case"end":return e.stop()}},e,this)}),function(){var n=e.apply(this,arguments)
return new Promise(function(e,t){return function o(a,r){try{var s=n[a](r),i=s.value}catch(e){return void t(e)}if(!s.done)return Promise.resolve(i).then(function(e){o("next",e)},function(e){o("throw",e)})
e(i)}("next")})})
return function(e){return t.apply(this,arguments)}}(),willTeardownComponent:function(e,t,o){return(0,n.animate)(this.element,{opacity:0},{duration:150,easing:"ease-in-circ"}).then(o),!1},didUpdateRouteAttrs:function(){this._scrollToAnchor()},_scrollToAnchor:function(){var e=this.get("route.anchor")
if(e){var t=this.element.querySelector("#"+e)
t&&(0,n.animate)(t,"scroll")}}})}),define("dummy/mixins/route-dependent",["exports","velocity-animate"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({didRenderComponent:function(e){if(e){var t=this._isBefore(e)?"-100%":"100%";(0,n.animate)(this.element,{translateX:[0,t]})}},willTeardownComponent:function(e,t,o){if(e){var a=this._isBefore(e)?"-100%":"100%"
return(0,n.animate)(this.element,{translateX:a}).then(o),!1}},_isBefore:function(e){return this.toString().match("-two")&&e.match("-three")||this.toString().match("-one")&&e.match("-two")}})})
define("dummy/query-params-page/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/query-params-page/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"QPhVR98P",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"Query Params"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  Query parameters are the last piece functionality that controllers provide in classic Ember. They can now be solely defined on the route:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["js","posts/route.js"]],{"statements":[[0,"import { ComponentRoute } from \'ember-component-routes\';\\n\\nexport default ComponentRoute.extend({\\n\\n  queryParams: {\\n    page: {\\n      as: \'p\',\\n      refreshModel: true,\\n      defaultValue: 1\\n    }\\n  }\\n\\n});\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  The classic Ember "],[6,"a"],[10,"href","https://emberjs.com/api/ember/release/classes/Route/properties/queryParams?anchor=queryParams"],[10,"target","_blank"],[8],[0,"query params configuration options"],[9],[0," (specifically "],[6,"code"],[8],[0,"as"],[9],[0," and "],[6,"code"],[8],[0,"refreshModel"],[9],[0,") are preserved, while "],[6,"code"],[8],[0,"defaultValue"],[9],[0," is newly added.\\n"],[9],[0,"\\n\\n"],[6,"h2"],[8],[0,"Using Query Params"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  Query param values are available in the "],[6,"code"],[8],[0,"attributes"],[9],[0," hook. They can also be accessed via the classic "],[6,"code"],[8],[6,"a"],[10,"href","https://emberjs.com/api/ember/release/classes/Route/methods/paramsFor?anchor=paramsFor"],[10,"target","_blank"],[8],[0,"paramsFor"],[9],[9],[0," method.\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["js","posts/route.js"]],{"statements":[[0,"import { ComponentRoute } from \'ember-component-routes\';\\n\\nexport default ComponentRoute.extend({\\n\\n  queryParams: {\\n    page: {\\n      as: \'p\',\\n      refreshModel: true,\\n      defaultValue: 1\\n    },\\n\\n    showComments: {\\n      as: \'comments\'\\n    }\\n  },\\n\\n  // Changes to `page` will refresh the model hook\\n  model({ page }) {\\n    return this.store.query(\'post\', { page });\\n  },\\n\\n  // Changes to `showComments` will refresh the attributes hook\\n  attributes(model, { showComments }, actions) {\\n    return { model, showComments, actions };\\n  }\\n});\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  If a query param affects the "],[6,"code"],[8],[0,"model"],[9],[0," hook, "],[6,"code"],[8],[0,"refreshModel"],[9],[0," should be set to "],[6,"code"],[8],[0,"true"],[9],[0,". Otherwise, query params will by default only refresh the "],[6,"code"],[8],[0,"attributes"],[9],[0," hook, updating the attributes set on the rendered components.\\n"],[9],[0,"\\n\\n\\n"],[6,"h2"],[8],[0,"Unidirectional Data Flow"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  In classic Ember, updating a controller property that is a query param would cause a route transition. However, this opposes the "],[6,"a"],[10,"href","https://emberway.io/ember-js-goodbye-mvc-part-1-21777ecfd708"],[10,"target","_blank"],[8],[0,"unidirectional data flow"],[9],[0," that is recommended as a modern-day best practice in other parts of the framework.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  Using "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," enforces query params to flow only one way: from routes down to components. Updating query params should be done via route transitions only, which can be done easily from the component layer using the new "],[6,"a"],[10,"href","https://emberjs.com/api/ember/release/classes/RouterService"],[10,"target","_blank"],[8],[0,"RouterService"],[9],[0,".\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  Because of this, the "],[6,"code"],[8],[0,"replace"],[9],[0," option in the route\'s query params configuration is no longer relevant.\\n"],[9],[0,"\\n\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["attributes"],null,{"statements":[[0,"Passing Attributes & Actions"]],"parameters":[]},null],[0,"\\n  "],[4,"link-to",["component-hooks"],null,{"statements":[[0,"Component Hooks"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/query-params-page/template.hbs"}})}),define("dummy/query-params/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("query-params-page")}})}),define("dummy/rendering-page/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/rendering-page/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"xuih+0Mr",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"Rendering Components"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," enables you to bypass the controller layer, by specifying a component to render in a "],[6,"code"],[8],[0,"ComponentRoute"],[9],[0,":\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["title"],["post/route.js"]],{"statements":[[0,"import { ComponentRoute } from \'ember-component-routes\';\\n\\nexport default ComponentRoute.extend({\\n\\n  renderComponents() {\\n    this.renderComponent(\'post-page\');\\n  }\\n\\n});\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  Instead of the classic "],[6,"code"],[8],[0,"{{outlet}}"],[9],[0,", use:\\n"],[9],[0,"\\n\\n\\n"],[4,"code-block",null,[["title"],["application/template.hbs"]],{"statements":[[0,"{{component-outlet}}\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  When the route is entered, the "],[6,"code"],[8],[0,"post-page"],[9],[0," component will be rendered into the application template\'s "],[6,"code"],[8],[0,"component-outlet"],[9],[0,".\\n"],[9],[0,"\\n\\n"],[6,"hr"],[8],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The hook accepts multiple "],[6,"code"],[8],[0,"renderComponent"],[9],[0," calls, which can target specific outlets by the outlet name, or parent component\'s name. For example:\\n"],[9],[0,"\\n\\n\\n"],[4,"code-block",null,[["type","numbers"],["js",false]],{"statements":[[0,"renderComponents() {\\n  this.renderComponent(\'app-menu\', { outlet: \'sidebar\' });\\n\\n  this.renderComponent(\'post-page\', { into: \'parent-page\' });\\n}\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  For more details, view the "],[4,"link-to",["api-component-route"],null,{"statements":[[0,"API reference"]],"parameters":[]},null],[0,".\\n"],[9],[0,"\\n\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["index"],null,{"statements":[[0,"Overview"]],"parameters":[]},null],[0,"\\n  "],[4,"link-to",["attributes"],null,{"statements":[[0,"Passing Attributes & Actions"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/rendering-page/template.hbs"}})}),define("dummy/rendering/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend({renderComponents:function(){this.renderComponent("rendering-page")}})}),define("dummy/resolver",["exports","ember-resolver"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default}),define("dummy/router",["exports","dummy/config/environment"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0})
var t=Ember.Router.extend({location:n.default.locationType,rootURL:n.default.rootURL})
t.map(function(){this.route("rendering"),this.route("attributes"),this.route("query-params"),this.route("component-hooks"),this.route("animations",function(){this.route("fade-to-white"),this.route("cross-fade-attempt"),this.route("basic-cross-fade"),this.route("route-dependent-1"),this.route("route-dependent-3")}),this.route("vs-classic"),this.route("skeleton-loading"),this.route("api-component-route",{path:"api/component-route"}),this.route("api-component",{path:"api/component"}),this.route("tests",function(){this.route("parent",function(){this.route("component-route"),this.route("child",function(){this.route("component-route")}),this.route("component-child",function(){this.route("component-route"),this.route("component-grand-child",function(){this.route("component-route")})}),this.route("params",{path:"/params/:id"})}),this.route("multiple",function(){this.route("component-route")})})}),e.default=t}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return n.default}})}),define("dummy/services/component-router",["exports","ember-component-routes/services/component-router"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return n.default}})}),define("dummy/services/root-url",["exports","ember-root-url/services/root-url"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return n.default}})}),define("dummy/side-menu/component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({tagName:"aside",classNames:"side-bar",router:Ember.inject.service(),onRoute:Ember.computed("router.currentRouteName",function(){var e=this.get("router.currentRouteName").split(".")
return e.reduce(function(n,t,o){return Ember.assign(n,(a={},r=e.slice(0,o+1).join("."),s=!0,r in a?Object.defineProperty(a,r,{value:s,enumerable:!0,configurable:!0,writable:!0}):a[r]=s,a))
var a,r,s},{})})})}),define("dummy/side-menu/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"EIscjpTh",block:'{"symbols":[],"statements":[[6,"div"],[8],[0,"\\n  "],[4,"link-to",["index",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["index"]],{"statements":[[0,"Overview"]],"parameters":[]},null],[0,"\\n\\n  "],[6,"h1"],[8],[0,"Usage"],[9],[0,"\\n\\n  "],[4,"link-to",["rendering",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["rendering"]],{"statements":[[0,"Rendering Components"]],"parameters":[]},null],[0,"\\n\\n  "],[4,"link-to",["attributes",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["attributes"]],{"statements":[[0,"Passing Attributes & Actions"]],"parameters":[]},null],[0,"\\n\\n  "],[4,"link-to",["query-params",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["query-params"]],{"statements":[[0,"Query Params"]],"parameters":[]},null],[0,"\\n\\n  "],[4,"link-to",["component-hooks",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["component-hooks"]],{"statements":[[0,"Component Hooks"]],"parameters":[]},null],[0,"\\n\\n  "],[6,"h1"],[8],[0,"Examples"],[9],[0,"\\n\\n  "],[4,"link-to",["animations",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["animations"]],{"statements":[[0,"Animations"]],"parameters":[]},null],[0,"\\n\\n"],[4,"if",[[22,["onRoute","animations"]]],null,{"statements":[[0,"    "],[6,"ul"],[8],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["animations",[26,"query-params",null,[["anchor"],["fade-to-white"]]]],null,{"statements":[[0,"Fade To White"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["animations",[26,"query-params",null,[["anchor"],["cross-fade"]]]],null,{"statements":[[0,"Cross-Fade"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["animations",[26,"query-params",null,[["anchor"],["route-dependent"]]]],null,{"statements":[[0,"Route-Dependent Animations"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n  "],[4,"link-to",["vs-classic",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["vs-classic"]],{"statements":[[0,"Comparison with Classic Ember"]],"parameters":[]},null],[0,"\\n\\n"],[4,"if",[[22,["onRoute","vs-classic"]]],null,{"statements":[[0,"    "],[6,"ul"],[8],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["vs-classic",[26,"query-params",null,[["anchor"],["classic-ember"]]]],null,{"statements":[[0,"Classic Ember"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["vs-classic",[26,"query-params",null,[["anchor"],["component-routes"]]]],null,{"statements":[[0,"Component Routes"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n  "],[4,"link-to",["skeleton-loading",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["skeleton-loading"]],{"statements":[[0,"Skeleton Loading UI"]],"parameters":[]},null],[0,"\\n\\n"],[4,"if",[[22,["onRoute","skeleton-loading"]]],null,{"statements":[[0,"    "],[6,"ul"],[8],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["skeleton-loading",[26,"query-params",null,[["anchor"],["desired-behaviour"]]]],null,{"statements":[[0,"Desired Behaviour"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["skeleton-loading",[26,"query-params",null,[["anchor"],["implementation"]]]],null,{"statements":[[0,"Implementation"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["skeleton-loading",[26,"query-params",null,[["anchor"],["evaluation"]]]],null,{"statements":[[0,"Evaluation"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n  "],[6,"h1"],[8],[0,"API Reference"],[9],[0,"\\n\\n  "],[4,"link-to",["api-component-route",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["api-component-route"]],{"statements":[[0,"ComponentRoute"]],"parameters":[]},null],[0,"\\n\\n"],[4,"if",[[22,["onRoute","api-component-route"]]],null,{"statements":[[0,"    "],[6,"ul"],[8],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["api-component-route",[26,"query-params",null,[["anchor"],["attributes"]]]],null,{"statements":[[0,"attributes()"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["api-component-route",[26,"query-params",null,[["anchor"],["currentAttributes"]]]],null,{"statements":[[0,"currentAttributes"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["api-component-route",[26,"query-params",null,[["anchor"],["queryParams"]]]],null,{"statements":[[0,"queryParams"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["api-component-route",[26,"query-params",null,[["anchor"],["refreshAttributes"]]]],null,{"statements":[[0,"refreshAttributes()"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["api-component-route",[26,"query-params",null,[["anchor"],["renderComponents"]]]],null,{"statements":[[0,"renderComponents()"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["api-component-route",[26,"query-params",null,[["anchor"],["renderComponent"]]]],null,{"statements":[[0,"renderComponent()"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n  "],[4,"link-to",["api-component",[26,"query-params",null,[["anchor"],[[25]]]]],[["current-when"],["api-component"]],{"statements":[[0,"Component"]],"parameters":[]},null],[0,"\\n\\n"],[4,"if",[[22,["onRoute","api-component"]]],null,{"statements":[[0,"    "],[6,"ul"],[8],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["api-component",[26,"query-params",null,[["anchor"],["didRenderComponent"]]]],null,{"statements":[[0,"didRenderComponent()"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["api-component",[26,"query-params",null,[["anchor"],["didUpdateRouteAttrs"]]]],null,{"statements":[[0,"didUpdateRouteAttrs()"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n      "],[6,"li"],[8],[0,"\\n        "],[4,"link-to",["api-component",[26,"query-params",null,[["anchor"],["willTeardownComponent"]]]],null,{"statements":[[0,"willTeardownComponent()"]],"parameters":[]},null],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n"]],"parameters":[]},null],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/side-menu/template.hbs"}})}),define("dummy/skeleton-loading/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/skeleton-loading/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend()}),define("dummy/skeleton-loading/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"XKvnx5qo",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"Skeleton Loading UI"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  There are many valid ways to achieve skeleton loading UI in Ember, e.g. using "],[6,"a"],[10,"href","https://emberway.io/skeleton-screen-loading-in-ember-js-2f7ac2384d63"],[10,"target","_blank"],[8],[0,"loader components"],[9],[0,", or by "],[6,"a"],[10,"href","https://engineering.linkedin.com/blog/2016/12/ember-concurrency--or--how-i-learned-to-stop-worrying-and-love-t"],[10,"target","_blank"],[8],[0,"using ember-concurrency"],[9],[0,". This example serves only to illustrate how it can be achieved with "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0,".\\n"],[9],[0,"\\n\\n"],[6,"h2"],[10,"id","desired-behaviour"],[8],[0,"Desired Behaviour"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  The desired behaviour looks something like this:\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  First of all, we want the "],[6,"code"],[8],[0,"posts-page"],[9],[0," component to be displayed immediately upon transition instead of blocking the UI while data is fetching.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  On first load, we also want it to:\\n"],[9],[0,"\\n\\n"],[6,"ul"],[8],[0,"\\n  "],[6,"li"],[8],[0,"Show a "],[6,"code"],[8],[0,"loading-bar"],[9],[0," while data is being fetched"],[9],[0,"\\n  "],[6,"li"],[8],[0,"Show "],[6,"code"],[8],[0,"loading-placeholders"],[9],[0," in place of the posts"],[9],[0,"\\n  "],[6,"li"],[8],[0,"Display the posts after loading, or a "],[6,"code"],[8],[0,"blank-slate"],[9],[0," template if none exist"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  On subsequent loads, it should:\\n"],[9],[0,"\\n\\n"],[6,"ul"],[8],[0,"\\n  "],[6,"li"],[8],[0,"Show a "],[6,"code"],[8],[0,"loading-bar"],[9],[0," while data is fetched for a background update"],[9],[0,"\\n  "],[6,"li"],[8],[0,"Show any already loaded posts while background updating"],[9],[0,"\\n  "],[6,"li"],[8],[0,"Display the posts after loading, or a "],[6,"code"],[8],[0,"blank-slate"],[9],[0," template if none exist"],[9],[0,"\\n"],[9],[0,"\\n\\n"],[6,"h2"],[10,"id","implementation"],[8],[0,"Implementation"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["js","posts/route.js"]],{"statements":[[0,"import { ComponentRoute } from \'ember-component-routes\';\\n\\nexport default ComponentRoute.extend({\\n\\n  queryParams: {\\n    search: {\\n      refreshModel: true,\\n      as: \'q\'\\n    }\\n  },\\n\\n  // Always fetch from API but resolve immediately\\n  model({ search }) {\\n    const query = this.store.query(\'post\', { search, reload: true })\\n      .then(() => this.refreshAttributes());\\n\\n    return { query };\\n  },\\n\\n  // Pass the fetch query, as well as any loaded posts\\n  attributes({ query }, { search }, actions) {\\n    const posts = this._matchingPostsFromStore(search);\\n\\n    return { query, posts, search, actions };\\n  },\\n\\n  renderComponents() {\\n    this.renderComponent(\'posts-page\');\\n  },\\n\\n  // Retrieve any matching posts that were previously loaded\\n  _matchingPostsFromStore(search) {\\n    return this.store.peekAll(\'post\')\\n      .filter((post) => post.get(\'title\').match(search));\\n  },\\n\\n  actions: {\\n    clearSearch() {\\n      this.transitionTo(\'posts\', { queryParams: { search: null } });\\n    }\\n  }\\n});\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  To achieve this, we have the "],[6,"code"],[8],[0,"model"],[9],[0," hook return a POJO instead of the "],[6,"code"],[8],[0,"query"],[9],[0," promise. This resolves immediately so the component is rendered immediately.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  In the "],[6,"code"],[8],[0,"attributes"],[9],[0," hook, we pass "],[6,"code"],[8],[0,"query"],[9],[0," to the component so we have the loading state (whether data is loading or loaded). We also retrieve loaded posts from the store and pass it as "],[6,"code"],[8],[0,"posts"],[9],[0," so any previously loaded posts can be instantly displayed.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  We also chain "],[6,"code"],[8],[0,"refreshAttributes()"],[9],[0," after "],[6,"code"],[8],[0,"query"],[9],[0," resolves, which calls the "],[6,"code"],[8],[0,"attributes"],[9],[0," hook again, thus updating "],[6,"code"],[8],[0,"posts"],[9],[0," with any newly fetched data.\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["title","custom"],["posts-page/template.hbs",true]],{"statements":[[6,"code"],[10,"class","hbs"],[8],[0,"<h1>Posts matching \\"{{@route.search}}\\"</h1>\\n\\n{{!-- Show loading bar if loading or updating from API --}}\\n{{#if @route.query.isPending}}\\n  {{loading-bar}}\\n{{/if}}\\n\\n{{!-- Display any already loaded posts --}}\\n{{#if @route.posts.length}}\\n  {{#each @route.posts as |post|}}\\n    {{post-item post=post}}\\n  {{/each}}\\n\\n{{!-- Store is empty, but loading from API --}}\\n"],[9],[0,"\\n"],[6,"code"],[10,"class","no-highlight hljs"],[8],[6,"span"],[10,"class","hljs-template-tag"],[8],[0,"{{"],[6,"span"],[10,"class","hljs-name"],[8],[6,"span"],[10,"class","hljs-builtin-name"],[8],[0,"else if"],[9],[9],[0," @route.query.isPending}}"],[9],[0,"\\n"],[9],[0,"\\n"],[6,"code"],[10,"class","hbs"],[8],[0,"  {{loading-placeholders}}\\n\\n{{!-- Finished loading but no posts --}}\\n"],[9],[0,"\\n"],[6,"code"],[10,"class","no-highlight hljs"],[8],[6,"span"],[10,"class","hljs-template-tag"],[8],[0,"{{"],[6,"span"],[10,"class","hljs-name"],[8],[6,"span"],[10,"class","hljs-builtin-name"],[8],[0,"else"],[9],[9],[0,"}}"],[9],[0,"\\n"],[9],[0,"\\n"],[6,"code"],[10,"class","hbs"],[8],[0,"  {{blank-slate}}\\n{{/if}}\\n\\n<button onclick={{@route.actions.clearSearch}}>Reset</button>\\n"],[9]],"parameters":[]},null],[0,"\\n\\n"],[6,"h2"],[10,"id","evaluation"],[8],[0,"Evaluation"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  WIP\\n"],[9],[0,"\\n\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["vs-classic"],[["class"],["back"]],{"statements":[[0,"Comparison with Classic Ember"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/skeleton-loading/template.hbs"}})}),define("dummy/tests/multiple/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"32M+oEkY",block:'{"symbols":[],"statements":[[6,"div"],[10,"class","multiple"],[8],[0,"\\n  "],[1,[26,"component-outlet",null,[["class"],["multiple__component-outlet"]]],false],[0,"\\n  "],[1,[26,"component-outlet",null,[["class"],["multiple__component-outlet"]]],false],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/tests/multiple/template.hbs"}})}),define("dummy/tests/parent/child/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"em+J5Oir",block:'{"symbols":[],"statements":[[6,"div"],[10,"class","child"],[8],[0,"\\n  "],[1,[26,"component-outlet",null,[["class"],["child__component-outlet"]]],false],[0,"\\n\\n  "],[1,[26,"component-outlet",["alt"],[["class"],["child__component-outlet_alt"]]],false],[0,"\\n\\n  "],[6,"div"],[10,"class","child__classic-outlet"],[8],[0,"\\n    "],[1,[20,"outlet"],false],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/tests/parent/child/template.hbs"}})}),define("dummy/tests/parent/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"/4nuTIyA",block:'{"symbols":[],"statements":[[6,"div"],[10,"class","parent"],[8],[0,"\\n  "],[1,[26,"component-outlet",null,[["class"],["parent__component-outlet"]]],false],[0,"\\n\\n  "],[1,[26,"component-outlet",["alt"],[["class"],["parent__component-outlet_alt"]]],false],[0,"\\n\\n  "],[6,"div"],[10,"class","parent__classic-outlet"],[8],[0,"\\n    "],[1,[20,"outlet"],false],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/tests/parent/template.hbs"}})}),define("dummy/top-bar/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"bMlIx3E+",block:'{"symbols":[],"statements":[[6,"div"],[10,"class","top-bar"],[8],[0,"\\n  "],[6,"div"],[10,"class","container"],[8],[0,"\\n    "],[6,"h1"],[8],[0,"\\n      "],[4,"link-to",["index"],null,{"statements":[[0,"ember-component-routes"]],"parameters":[]},null],[0,"\\n    "],[9],[0,"\\n    "],[6,"div"],[10,"class","top-bar__links"],[8],[0,"\\n      "],[6,"a"],[10,"href","https://github.com/wongpeiyi/ember-component-routes"],[8],[0,"GitHub"],[9],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/top-bar/template.hbs"}})}),define("dummy/vs-classic/component",["exports","dummy/mixins/page"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(n.default)}),define("dummy/vs-classic/route",["exports","ember-component-routes"],function(e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.ComponentRoute.extend()}),define("dummy/vs-classic/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"mKFOjzA7",block:'{"symbols":[],"statements":[[6,"h1"],[8],[0,"Comparison with Classic Ember"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  This example shows the simplification "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," can potentially provide. The reduction in number of lines is not too important; what matters more is having less files, less layers and less objects to deal with.\\n"],[9],[0,"\\n\\n"],[6,"h2"],[10,"id","classic-ember"],[8],[0,"Classic Ember"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["js","posts/route.js"]],{"statements":[[0,"import Route from \'@ember/routing/route\';\\n\\nexport default Route.extend({\\n\\n  queryParams: {\\n    page: {\\n      refreshModel: true,\\n      as: \'p\'\\n    }\\n  },\\n\\n  model({ page }) {\\n    return this.store.query(\'post\', { page });\\n  },\\n\\n  actions: {\\n    reload() {\\n      this.refresh();\\n    }\\n  }\\n});\\n"]],"parameters":[]},null],[0,"\\n"],[4,"code-block",null,[["type","title"],["js","posts/controller.js"]],{"statements":[[6,"span"],[10,"class","code-block__minus"],[8],[0,"import Controller from \'@ember/controller\';\\n\\nexport default Controller.extend({\\n  queryParams: [\'page\'],\\n  page: null,\\n\\n  actions: {\\n    reload() {\\n      this.send(\'reload\');\\n    }\\n  }\\n});"],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"code-block",null,[["type","title"],["htmlbars","posts/template.hbs"]],{"statements":[[6,"span"],[10,"class","code-block__minus"],[8],[0,"{{posts-page\\n  posts=model\\n  page=page\\n  reload=(action \'reload\')\\n}}"],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"code-block",null,[["type","title"],["hbs","posts-page/template.hbs"]],{"statements":[[0,"<h1>Posts ({{@page}})</h1>\\n\\n{{#each @posts as |post|}}\\n  {{post-item post=post}}\\n{{/each}}\\n\\n<button onclick={{@reload}}>Reload</button>\\n"]],"parameters":[]},null],[0,"\\n"],[6,"p"],[8],[0,"\\n  "],[6,"em"],[8],[0,"Note:"],[9],[0," Although you could get away without a "],[6,"code"],[8],[0,"posts-page"],[9],[0," component template here, most non-trivial apps would typically require components for lifecycle hooks, setting non-persistent UI state, or just for consistency.\\n"],[9],[0,"\\n\\n"],[0,"\\n"],[6,"h2"],[10,"id","component-routes"],[8],[0,"Component Routes"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  Using "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0,", we have a slightly fatter route file in return for removing the controller file and layer, and potentially one less template file.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  We also have consistency in the view layer. In classic Ember, we have two types of views (components and controller templates), which differ significantly in behaviour but do not have substantially different use cases to warrant it — mainly just legacy reasons.\\n"],[9],[0,"\\n\\n"],[6,"p"],[8],[0,"\\n  "],[6,"strong"],[8],[0,"ember-component-routes"],[9],[0," attempts to simplify Ember apps by removing the need for this difference:\\n"],[9],[0,"\\n\\n"],[4,"code-block",null,[["type","title"],["js","posts/route.js"]],{"statements":[[0,"import { ComponentRoute } from \'ember-component-routes\';\\n\\nexport default ComponentRoute.extend({\\n\\n  queryParams: {\\n    page: {\\n      refreshModel: true,\\n      as: \'p\'\\n    }\\n  },\\n\\n  model({ page }) {\\n    return this.store.query(\'post\', { page });\\n  },\\n"],[6,"span"],[10,"class","code-block__plus"],[8],[0,"\\n  attributes(posts, { page }, actions) {\\n    return { posts, page, actions };\\n  },\\n\\n  renderComponents() {\\n    this.renderComponent(\'posts-page\');\\n  },\\n"],[9],[0,"\\n  actions: {\\n    reload() {\\n      this.refresh();\\n    }\\n  }\\n});\\n"]],"parameters":[]},null],[0,"\\n"],[4,"code-block",null,[["type","title"],["hbs","posts-page/template.hbs"]],{"statements":[[0,"<h1>Posts ({{"],[6,"span"],[10,"class","code-block__plus"],[8],[0,"@route."],[9],[0,"page}})</h1>\\n\\n{{#each "],[6,"span"],[10,"class","code-block__plus"],[8],[0,"@route."],[9],[0,"posts as |post|}}\\n  {{post-item post=post}}\\n{{/each}}\\n\\n<button onclick={{"],[6,"span"],[10,"class","code-block__plus"],[8],[0,"@route.actions."],[9],[0,"reload}}>Reload</button>\\n"]],"parameters":[]},null],[0,"\\n\\n"],[6,"footer"],[8],[0,"\\n  "],[4,"link-to",["animations"],null,{"statements":[[0,"Animations"]],"parameters":[]},null],[0,"\\n  "],[4,"link-to",["skeleton-loading"],null,{"statements":[[0,"Skeleton Loading UI"]],"parameters":[]},null],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/vs-classic/template.hbs"}})}),define("dummy/config/environment",[],function(){try{var e="dummy/config/environment",n=document.querySelector('meta[name="'+e+'"]').getAttribute("content"),t={default:JSON.parse(unescape(n))}
return Object.defineProperty(t,"__esModule",{value:!0}),t}catch(n){throw new Error('Could not read config from meta tag with name "'+e+'".')}}),runningTests||require("dummy/app").default.create({})
